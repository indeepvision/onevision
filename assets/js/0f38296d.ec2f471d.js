"use strict";(self.webpackChunk_indeepvision_onevision_docs=self.webpackChunk_indeepvision_onevision_docs||[]).push([[8733],{2247:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>y});var r=t(4041);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),g=p(t),m=a,y=g["".concat(l,".").concat(m)]||g[m]||c[m]||i;return t?r.createElement(y,o(o({ref:n},u),{},{components:t})):r.createElement(y,o({ref:n},u))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[g]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2880:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/add-sequence_70-eddf9ab87d7f73f329ee51fe0332290b.png"},4493:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(9575),a=(t(4041),t(2247));const i={sidebar_position:1},o="Language Rules",s={unversionedId:"programming/syntax/language-rules",id:"programming/syntax/language-rules",title:"Language Rules",description:"Programming in OneVision Scripts is very similar to programming in Typescript. The main diference is the use of sequences to control the flow of the program.",source:"@site/docs/programming/syntax/language-rules.md",sourceDirName:"programming/syntax",slug:"/programming/syntax/language-rules",permalink:"/onevision/docs/programming/syntax/language-rules",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"programming",previous:{title:"Features",permalink:"/onevision/docs/programming/syntax/features"},next:{title:"Comments",permalink:"/onevision/docs/programming/syntax/comments"}},l={},p=[{value:"Sequences",id:"sequences",level:2},{value:"Terminating statement",id:"terminating-statement",level:2}],u={toc:p},g="wrapper";function c(e){let{components:n,...i}=e;return(0,a.yg)(g,(0,r.A)({},u,i,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"language-rules"},"Language Rules"),(0,a.yg)("p",null,"Programming in OneVision Scripts is very similar to programming in Typescript. The main diference is the use of sequences to control the flow of the program. "),(0,a.yg)("h2",{id:"sequences"},"Sequences"),(0,a.yg)("p",null,"Sequences encompass all the code executed during the runtime of your application. They allow you to define instructions for the program to perform or events to handle."),(0,a.yg)("p",null,"There are four types of sequences: "),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Init Sequences:")),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Purpose:")," Init sequences execute once at the beginning of the vision application."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Usage:")," These sequences are ideal for initializing configuration variables, preparing modules, or setting up essential resources needed throughout the application's lifespan."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Example Use:")," Initializing libraries, loading initial data, setting up environment configurations."))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Simple Sequences:")),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Purpose:")," Simple sequences execute immediately after the init sequences."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Usage:")," They are used for one-time operations that do not need to repeat during runtime or using loops to create cyclic executions manually. "),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Example Use:")," Performing initial image processing tasks, setting up initial UI components or define cyclic sequence with more control of the execution frequency."))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Cyclic Sequences:")),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Purpose:")," Cyclic sequences execute repeatedly in a loop after the init sequences."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Usage:")," They are employed for continuous tasks such as real-time processing, ongoing monitoring, or iterative operations."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Example Use:")," Real-time video analysis, continuous data acquisition and processing."))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"End Sequences:")),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Purpose:")," End sequences execute at the conclusion of the runtime."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Usage:")," They handle final operations, clean-up tasks, or logging before the application terminates."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Example Use:")," Saving results, closing connections, releasing resources.")))),(0,a.yg)("p",null,"To create a sequence you just have to add and define a name and the type of sequence: "),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Alt text",src:t(2880).A,width:"496",height:"254"})),(0,a.yg)("h2",{id:"terminating-statement"},"Terminating statement"),(0,a.yg)("p",null,"In your custom programming language designed for computer vision applications, ensuring clarity and consistency in coding practices is crucial. One important rule to follow in OneVision Scripts is that all instructions should end with a semicolon (;). This rule helps the compiler parse the code correctly and prevents ambiguity in statements."),(0,a.yg)("p",null,"For example: "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},'// Correct instructions\nvar age: number = 30; \nvar name: string = "Alice"; \nvar isStudent: boolean = true; \n\n// Incorrect instruction\nvar day: number = 30\n')))}c.isMDXComponent=!0}}]);