"use strict";(self.webpackChunk_indeepvision_onevision_docs=self.webpackChunk_indeepvision_onevision_docs||[]).push([[364],{2247:(e,t,r)=>{r.d(t,{xA:()=>l,yg:()=>d});var a=r(4041);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),f=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=f(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=f(r),p=n,d=c["".concat(u,".").concat(p)]||c[p]||m[p]||i;return r?a.createElement(d,o(o({ref:t},l),{},{components:r})):a.createElement(d,o({ref:t},l))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=p;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[c]="string"==typeof e?e:n,o[1]=s;for(var f=2;f<i;f++)o[f]=r[f];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5192:(e,t,r)=>{r.d(t,{A:()=>a});const a=r.p+"assets/images/camera_buffer_status_70-1cbd82dc5cd232ea0401dab665ca9d8c.PNG"},7853:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>f});var a=r(9575),n=(r(4041),r(2247));const i={sidebar_position:3},o="Understanding the Image Buffer",s={unversionedId:"software-guide/cameras/image-buffer",id:"software-guide/cameras/image-buffer",title:"Understanding the Image Buffer",description:"Here we will describe how the camera images are stored in the image buffer. First of all, the size of the buffer is configured in the Image buffer size parameter.",source:"@site/docs/software-guide/cameras/image-buffer.md",sourceDirName:"software-guide/cameras",slug:"/software-guide/cameras/image-buffer",permalink:"/onevision/docs/software-guide/cameras/image-buffer",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"softwareGuide",previous:{title:"Manual Operation",permalink:"/onevision/docs/software-guide/cameras/manual-operation"},next:{title:"Camera Configuration",permalink:"/onevision/docs/software-guide/cameras/camera-configuration"}},u={},f=[],l={toc:f},c="wrapper";function m(e){let{components:t,...i}=e;return(0,n.yg)(c,(0,a.A)({},l,i,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"understanding-the-image-buffer"},"Understanding the Image Buffer"),(0,n.yg)("p",null,"Here we will describe how the camera images are stored in the image buffer. First of all, the size of the buffer is configured in the ",(0,n.yg)("a",{parentName:"p",href:"#image-buffer-size"},"Image buffer size")," parameter."),(0,n.yg)("p",null,"The image buffer is actually composed of 2 buffers, the input buffer and the output buffer. The sum of both buffers is the total size of the image buffer."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Input buffer:"),' These are the image containers that will be written by the camera when new images are received. They are the "available images".'),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Output buffer:"),' These are the image containers that have already been filled, and are waiting to be retrieved by the user. They are "locked" until they are retrieved.')),(0,n.yg)("p",null,"In the ",(0,n.yg)("a",{parentName:"p",href:"./#status-panel"},'"status panel"')," you can monitor in real time the number of image containers available in each buffer. The total number of image that have arrived is shown in the ",(0,n.yg)("strong",{parentName:"p"},"Image count")," field."),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"Buffer status",src:r(5192).A,width:"348",height:"90"})),(0,n.yg)("p",null,"This is how the buffers work:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"When the camera is first connected, empty image containers are created and placed in the input buffer."),(0,n.yg)("li",{parentName:"ol"},"When a new image arrives from the camera, an empty container is taken from the input buffer, is written with the data, and then is placed in the back output buffer."),(0,n.yg)("li",{parentName:"ol"},"When the user requests an image, the frist image (the oldest) in the output buffer is taken and returned to the user. The image container is then removed from the output buffer and placed in the input buffer."),(0,n.yg)("li",{parentName:"ol"},"If the camera is streaming images faster than the user is retrieving them, the input buffer will be emptied until there is one last image left. At this point, images are automatically discarded from the output buffer and returned to the input buffer to make room for the new images."),(0,n.yg)("li",{parentName:"ol"},"In video mode, only the last image in the output buffer is kept, the rest are discarded, so the output buffer size will always be 1.")))}m.isMDXComponent=!0}}]);