"use strict";(self.webpackChunk_indeepvision_onevision_docs=self.webpackChunk_indeepvision_onevision_docs||[]).push([[9042],{2247:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>u});var i=t(4041);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),c=p(t),g=a,u=c["".concat(s,".").concat(g)]||c[g]||m[g]||l;return t?i.createElement(u,o(o({ref:n},d),{},{components:t})):i.createElement(u,o({ref:n},d))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=g;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r[c]="string"==typeof e?e:a,o[1]=r;for(var p=2;p<l;p++)o[p]=t[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},2518:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>p});var i=t(9575),a=(t(4041),t(2247));const l={sidebar_position:1},o="Vision element base",r={unversionedId:"vision-elements/elements/vision-element",id:"vision-elements/elements/vision-element",title:"Vision element base",description:"The VisionElement class is the base class for all vision elements. All elements will have the functions defined in this class. All other vision elements inherit from this abstract class.",source:"@site/docs/vision-elements/2_elements/1-vision-element.md",sourceDirName:"vision-elements/2_elements",slug:"/vision-elements/elements/vision-element",permalink:"/onevision/docs/vision-elements/elements/vision-element",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"visionElements",previous:{title:"Utils",permalink:"/onevision/docs/vision-elements/basics/utils"},next:{title:"Vision element types",permalink:"/onevision/docs/vision-elements/elements/vision-element-types"}},s={},p=[{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>getId()</code>",id:"getid",level:3},{value:"<code>getType()</code>",id:"gettype",level:3},{value:"<code>allocatedSize()</code>",id:"allocatedsize",level:3},{value:"<code>clone()</code>",id:"clone",level:3},{value:"<code>getParentId()</code>",id:"getparentid",level:3},{value:"<code>setParentId()</code>",id:"setparentid",level:3},{value:"<code>setParentId()</code>",id:"setparentid-1",level:3},{value:"<code>removeParentId()</code>",id:"removeparentid",level:3},{value:"<code>hasParent()</code>",id:"hasparent",level:3},{value:"<code>hasName()</code>",id:"hasname",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>name</code>",id:"name",level:3},{value:"<code>description</code>",id:"description",level:3},{value:"<code>type</code>",id:"type",level:3}],d={toc:p},c="wrapper";function m(e){let{components:n,...t}=e;return(0,a.yg)(c,(0,i.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"vision-element-base"},"Vision element base"),(0,a.yg)("p",null,"The ",(0,a.yg)("strong",{parentName:"p"},"VisionElement")," class is the base class for all vision elements. All elements will have the functions defined in this class. All other vision elements inherit from this abstract class."),(0,a.yg)("h2",{id:"constructors"},"Constructors"),(0,a.yg)("p",null,"This class is not constructible, it is only used as a base class for other vision elements."),(0,a.yg)("h2",{id:"methods"},"Methods"),(0,a.yg)("h3",{id:"getid"},(0,a.yg)("inlineCode",{parentName:"h3"},"getId()")),(0,a.yg)("p",null,"Returns a unique numeric identifier of this vision element."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-onevision"},"getId(): number;\n")),(0,a.yg)("h3",{id:"gettype"},(0,a.yg)("inlineCode",{parentName:"h3"},"getType()")),(0,a.yg)("p",null,"Returns the type of the vision element."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-onevision"},"getType(): EVisionElement;\n")),(0,a.yg)("h3",{id:"allocatedsize"},(0,a.yg)("inlineCode",{parentName:"h3"},"allocatedSize()")),(0,a.yg)("p",null,"Returns the approximate size of data allocated by this vision element."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-onevision"},"allocatedSize(): number;\n")),(0,a.yg)("h3",{id:"clone"},(0,a.yg)("inlineCode",{parentName:"h3"},"clone()")),(0,a.yg)("p",null,"Method to clone the element. Returns it cast to the base class."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-onevision"},"clone(): VisionElement;\n")),(0,a.yg)("h3",{id:"getparentid"},(0,a.yg)("inlineCode",{parentName:"h3"},"getParentId()")),(0,a.yg)("p",null,"Returns the parent ID of this vision element, or 0 if there is no parent ID."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-onevision"},"getParentId(): number;\n")),(0,a.yg)("h3",{id:"setparentid"},(0,a.yg)("inlineCode",{parentName:"h3"},"setParentId()")),(0,a.yg)("p",null,"Sets the parent ID providing the parent ID number."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-onevision"},"setParentId(parentId: number): void;\n")),(0,a.yg)("h3",{id:"setparentid-1"},(0,a.yg)("inlineCode",{parentName:"h3"},"setParentId()")),(0,a.yg)("p",null,"Sets the parent ID providing the parent vision element."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-onevision"},"setParentId(parentElement: VisionElement): void;\n")),(0,a.yg)("h3",{id:"removeparentid"},(0,a.yg)("inlineCode",{parentName:"h3"},"removeParentId()")),(0,a.yg)("p",null,"Returns true if the ID was removed, false if it was not present."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-onevision"},"removeParentId(): boolean;\n")),(0,a.yg)("h3",{id:"hasparent"},(0,a.yg)("inlineCode",{parentName:"h3"},"hasParent()")),(0,a.yg)("p",null,"Returns true if the parent ID is set."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-onevision"},"hasParent(): boolean;\n")),(0,a.yg)("h3",{id:"hasname"},(0,a.yg)("inlineCode",{parentName:"h3"},"hasName()")),(0,a.yg)("p",null,"Returns true if the name of the vision element is set."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-onevision"},"hasName(): boolean;\n")),(0,a.yg)("h2",{id:"properties"},"Properties"),(0,a.yg)("h3",{id:"name"},(0,a.yg)("inlineCode",{parentName:"h3"},"name")),(0,a.yg)("p",null,"Optional name of the vision element. By default it is an empty string."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-onevision"},"name: string;\n")),(0,a.yg)("h3",{id:"description"},(0,a.yg)("inlineCode",{parentName:"h3"},"description")),(0,a.yg)("p",null,"Optional description of the vision element. By default it is an empty string."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-onevision"},"description: string;\n")),(0,a.yg)("h3",{id:"type"},(0,a.yg)("inlineCode",{parentName:"h3"},"type")),(0,a.yg)("p",null,"The element type identifier."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-onevision"},"type: EVisionElement;\n")))}m.isMDXComponent=!0}}]);