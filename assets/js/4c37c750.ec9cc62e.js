"use strict";(self.webpackChunk_indeepvision_onevision_docs=self.webpackChunk_indeepvision_onevision_docs||[]).push([[3883],{2135:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(9575),r=(n(4041),n(2247));const o={sidebar_position:1},i="TCP",l={unversionedId:"modules/net/tcp",id:"modules/net/tcp",title:"TCP",description:"This module provides a TCP client implementation for establishing connections and exchanging data with TCP network services.",source:"@site/docs/modules/15-net/1-tcp.md",sourceDirName:"modules/15-net",slug:"/modules/net/tcp",permalink:"/onevision/docs/modules/net/tcp",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"modules",previous:{title:"Capture",permalink:"/onevision/docs/modules/mes/capture"},next:{title:"FTP",permalink:"/onevision/docs/modules/net/ftp"}},s={},c=[{value:"TCPClient",id:"tcpclient",level:2},{value:"Constructor",id:"constructor",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>connect()</code>",id:"connect",level:3},{value:"<code>disconnect()</code>",id:"disconnect",level:3},{value:"<code>waitData()</code>",id:"waitdata",level:3},{value:"<code>waitNewData()</code>",id:"waitnewdata",level:3},{value:"<code>getData()</code>",id:"getdata",level:3},{value:"<code>clearData()</code>",id:"cleardata",level:3},{value:"<code>sendData()</code>",id:"senddata",level:3},{value:"<code>isConnected()</code>",id:"isconnected",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>host</code>",id:"host",level:3},{value:"<code>port</code>",id:"port",level:3}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"tcp"},"TCP"),(0,r.yg)("p",null,"This module provides a TCP client implementation for establishing connections and exchanging data with TCP network services."),(0,r.yg)("h2",{id:"tcpclient"},"TCPClient"),(0,r.yg)("p",null,"The ",(0,r.yg)("strong",{parentName:"p"},"TCPClient")," class represents a TCP client that enables communication with TCP network services. It allows you to connect to a server specified by a host address and port number."),(0,r.yg)("h2",{id:"constructor"},"Constructor"),(0,r.yg)("p",null,"Create a new TCP Client instance with a specified host and port."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"new TCPClient(host: string, port: number);\n")),(0,r.yg)("h2",{id:"methods"},"Methods"),(0,r.yg)("h3",{id:"connect"},(0,r.yg)("inlineCode",{parentName:"h3"},"connect()")),(0,r.yg)("p",null,"Initiates a connection with the server."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"connect(): Promise<void>;\n")),(0,r.yg)("h3",{id:"disconnect"},(0,r.yg)("inlineCode",{parentName:"h3"},"disconnect()")),(0,r.yg)("p",null,"Terminates the connection with the server."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"disconnect(): Promise<void>;\n")),(0,r.yg)("h3",{id:"waitdata"},(0,r.yg)("inlineCode",{parentName:"h3"},"waitData()")),(0,r.yg)("p",null,"Waits until the client has data available. Returns true if data is received within the optional timeout period; otherwise, returns false."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"waitData(timeout?: number): Promise<boolean>;\n")),(0,r.yg)("h3",{id:"waitnewdata"},(0,r.yg)("inlineCode",{parentName:"h3"},"waitNewData()")),(0,r.yg)("p",null,"Waits until the client receives new data. Returns true if new data is received within the optional timeout period; otherwise, returns false. This method waits for new data only; if data was already available before calling, it will wait for new data to arrive."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"waitNewData(timeout?: number): Promise<boolean>;\n")),(0,r.yg)("h3",{id:"getdata"},(0,r.yg)("inlineCode",{parentName:"h3"},"getData()")),(0,r.yg)("p",null,"Returns the data received from the server. Throws an error if the input buffer is empty."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"getData(): string;\n")),(0,r.yg)("h3",{id:"cleardata"},(0,r.yg)("inlineCode",{parentName:"h3"},"clearData()")),(0,r.yg)("p",null,"Clears the data buffer."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"clearData(): void;\n")),(0,r.yg)("h3",{id:"senddata"},(0,r.yg)("inlineCode",{parentName:"h3"},"sendData()")),(0,r.yg)("p",null,"Sends a stream of data to the server."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"sendData(data: string): Promise<void>;\n")),(0,r.yg)("h3",{id:"isconnected"},(0,r.yg)("inlineCode",{parentName:"h3"},"isConnected()")),(0,r.yg)("p",null,"Checks if the client is currently connected to the server. Returns true if connected; otherwise, returns false."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"isConnected(): boolean;\n")),(0,r.yg)("h2",{id:"properties"},"Properties"),(0,r.yg)("h3",{id:"host"},(0,r.yg)("inlineCode",{parentName:"h3"},"host")),(0,r.yg)("p",null,"Host address of the TCP server."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-onevision"},"string: host;\n")),(0,r.yg)("h3",{id:"port"},(0,r.yg)("inlineCode",{parentName:"h3"},"port")),(0,r.yg)("p",null,"Port number of the TCP server. Default is 22."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-onevision"},"number: port;\n")))}u.isMDXComponent=!0},2247:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>m});var a=n(4041);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),g=r,m=p["".concat(s,".").concat(g)]||p[g]||u[g]||o;return n?a.createElement(m,i(i({ref:t},d),{},{components:n})):a.createElement(m,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"}}]);