"use strict";(self.webpackChunk_indeepvision_onevision_docs=self.webpackChunk_indeepvision_onevision_docs||[]).push([[9757],{2247:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>b});var r=t(4041);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),y=i,b=u["".concat(s,".").concat(y)]||u[y]||d[y]||o;return t?r.createElement(b,a(a({ref:n},p),{},{components:t})):r.createElement(b,a({ref:n},p))}));function b(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=y;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},7038:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(9575),i=(t(4041),t(2247));const o={sidebar_position:21},a="Probability",l={unversionedId:"vision-elements/elements/probability",id:"vision-elements/elements/probability",title:"Probability",description:"The Probability class contains a dictionary of classes represented by a string and their corresponding probabilities. It is derived from the VisionElement base class.",source:"@site/docs/vision-elements/2_elements/21-probability.md",sourceDirName:"vision-elements/2_elements",slug:"/vision-elements/elements/probability",permalink:"/onevision/docs/vision-elements/elements/probability",draft:!1,tags:[],version:"current",sidebarPosition:21,frontMatter:{sidebar_position:21},sidebar:"visionElements",previous:{title:"Point2d",permalink:"/onevision/docs/vision-elements/elements/point2d"},next:{title:"Types",permalink:"/onevision/docs/vision-elements/types"}},s={},c=[{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>set()</code>",id:"set",level:3},{value:"<code>isDouble()</code>",id:"isdouble",level:3},{value:"Value",id:"value",level:2},{value:"<code>value</code>",id:"value-1",level:3}],p={toc:c},u="wrapper";function d(e){let{components:n,...t}=e;return(0,i.yg)(u,(0,r.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"probability"},"Probability"),(0,i.yg)("p",null,"The ",(0,i.yg)("strong",{parentName:"p"},"Probability")," class contains a dictionary of classes represented by a string and their corresponding probabilities. It is derived from the ",(0,i.yg)("a",{parentName:"p",href:"./vision-element"},"VisionElement")," base class."),(0,i.yg)("h2",{id:"constructors"},"Constructors"),(0,i.yg)("p",null,"Empty constructor."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-onevision"},"new Probability(): Probability;\n")),(0,i.yg)("p",null,"Constructor with the initial probabilities."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-onevision"},"new Probability(classes: Record<string, number>): Probability;\n")),(0,i.yg)("h2",{id:"methods"},"Methods"),(0,i.yg)("h3",{id:"set"},(0,i.yg)("inlineCode",{parentName:"h3"},"set()")),(0,i.yg)("p",null,"Set the dictionary of probabilities."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-onevision"},"set(classes: Record<string, number>): void;\n")),(0,i.yg)("h3",{id:"isdouble"},(0,i.yg)("inlineCode",{parentName:"h3"},"isDouble()")),(0,i.yg)("p",null,"Returns ",(0,i.yg)("inlineCode",{parentName:"p"},"true")," if the number is a floating point value."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-onevision"},"isDouble(): boolean;\n")),(0,i.yg)("h2",{id:"value"},"Value"),(0,i.yg)("h3",{id:"value-1"},(0,i.yg)("inlineCode",{parentName:"h3"},"value")),(0,i.yg)("p",null,"The numeric value."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-onevision"},"value: number;\n")))}d.isMDXComponent=!0}}]);