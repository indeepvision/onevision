"use strict";(self.webpackChunk_indeepvision_onevision_docs=self.webpackChunk_indeepvision_onevision_docs||[]).push([[7126],{2247:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>g});var o=t(4041);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),s=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=s(e.components);return o.createElement(c.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(t),m=r,g=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return t?o.createElement(g,a(a({ref:n},d),{},{components:t})):o.createElement(g,a({ref:n},d))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9318:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var o=t(9575),r=(t(4041),t(2247));const i={sidebar_position:5},a="Math",l={unversionedId:"vision-elements/basics/math",id:"vision-elements/basics/math",title:"Math",description:"Functions related to mathematics and algebra operations.",source:"@site/docs/vision-elements/1_basics/5-math.md",sourceDirName:"vision-elements/1_basics",slug:"/vision-elements/basics/math",permalink:"/onevision/docs/vision-elements/basics/math",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"visionElements",previous:{title:"Copy",permalink:"/onevision/docs/vision-elements/basics/copy"},next:{title:"Probabilities",permalink:"/onevision/docs/vision-elements/basics/probabilities"}},c={},s=[{value:"<code>normalizeRect()</code>",id:"normalizerect",level:3},{value:"<code>normalizeEllipse()</code>",id:"normalizeellipse",level:3},{value:"<code>normalizeVector()</code>",id:"normalizevector",level:3},{value:"<code>addVectors()</code>",id:"addvectors",level:3},{value:"<code>addPoints()</code>",id:"addpoints",level:3},{value:"<code>subVectors()</code>",id:"subvectors",level:3},{value:"<code>subPoints()</code>",id:"subpoints",level:3},{value:"<code>dotProduct()</code>",id:"dotproduct",level:3},{value:"<code>crossProduct()</code>",id:"crossproduct",level:3},{value:"<code>roundDecimal()</code>",id:"rounddecimal",level:3},{value:"<code>roundDecimalPath()</code>",id:"rounddecimalpath",level:3}],d={toc:s},u="wrapper";function p(e){let{components:n,...t}=e;return(0,r.yg)(u,(0,o.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"math"},"Math"),(0,r.yg)("p",null,"Functions related to mathematics and algebra operations."),(0,r.yg)("h3",{id:"normalizerect"},(0,r.yg)("inlineCode",{parentName:"h3"},"normalizeRect()")),(0,r.yg)("p",null,"Returns an equivalent rectangle with angle in the range ","[-45, 45]"," degrees."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-onevision"},"function normalizeRect(rect: Rect2d): Rect2d;\n")),(0,r.yg)("h3",{id:"normalizeellipse"},(0,r.yg)("inlineCode",{parentName:"h3"},"normalizeEllipse()")),(0,r.yg)("p",null,"Returns an equivalent ellipse with angle in the range ","[-45, 45]"," degrees."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-onevision"},"function normalizeEllipse(ellipse: Ellipse2d): Ellipse2d;\n")),(0,r.yg)("h3",{id:"normalizevector"},(0,r.yg)("inlineCode",{parentName:"h3"},"normalizeVector()")),(0,r.yg)("p",null,"Returns a new vector with norm equal to 1, with the same direction as the input vector."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-onevision"},"function normalizeVector(vector: Vector2d): Vector2d;\n")),(0,r.yg)("h3",{id:"addvectors"},(0,r.yg)("inlineCode",{parentName:"h3"},"addVectors()")),(0,r.yg)("p",null,"Returns the sum of two vectors as a new vector."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-onevision"},"function addVectors(vector1: Vector2d, vector2: Vector2d): Vector2d;\n")),(0,r.yg)("h3",{id:"addpoints"},(0,r.yg)("inlineCode",{parentName:"h3"},"addPoints()")),(0,r.yg)("p",null,"Returns the sum of two points as a new point."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-onevision"},"function addPoints(point1: Point2d, point2: Point2d): Point2d;\n")),(0,r.yg)("h3",{id:"subvectors"},(0,r.yg)("inlineCode",{parentName:"h3"},"subVectors()")),(0,r.yg)("p",null,"Returns the subtraction of two vectors as a new vector."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-onevision"},"function subVectors(vector1: Vector2d, vector2: Vector2d): Vector2d;\n")),(0,r.yg)("h3",{id:"subpoints"},(0,r.yg)("inlineCode",{parentName:"h3"},"subPoints()")),(0,r.yg)("p",null,"Returns the subtraction of two points as a new point."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-onevision"},"function subPoints(point1: Point2d, point2: Point2d): Point2d;\n")),(0,r.yg)("h3",{id:"dotproduct"},(0,r.yg)("inlineCode",{parentName:"h3"},"dotProduct()")),(0,r.yg)("p",null,"Returns the dot product of two vectors."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-onevision"},"function dotProduct(vector1: Vector2d, vector2: Vector2d): number;\n")),(0,r.yg)("h3",{id:"crossproduct"},(0,r.yg)("inlineCode",{parentName:"h3"},"crossProduct()")),(0,r.yg)("p",null,"Returns the norm of the cross product of two vectors. The norm is positive if the cross product is in the direction of the z-axis, negative if it is in the opposite direction, and zero if the vectors are parallel or anti-parallel"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-onevision"},"function crossProduct(vector1: Vector2d, vector2: Vector2d): number;\n")),(0,r.yg)("h3",{id:"rounddecimal"},(0,r.yg)("inlineCode",{parentName:"h3"},"roundDecimal()")),(0,r.yg)("p",null,"Rounds a floating point number to a given number of decimal places"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-onevision"},"function roundDecimal(value: number, decimalPlaces: number): number;\n")),(0,r.yg)("h3",{id:"rounddecimalpath"},(0,r.yg)("inlineCode",{parentName:"h3"},"roundDecimalPath()")),(0,r.yg)("p",null,"Rounds the coordinates of the every point in the path"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-onevision"},"function roundDecimalPath(path: Path2d, decimalPlaces: number): void;\n")))}p.isMDXComponent=!0}}]);