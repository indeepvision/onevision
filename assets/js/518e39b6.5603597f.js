"use strict";(self.webpackChunk_indeepvision_onevision_docs=self.webpackChunk_indeepvision_onevision_docs||[]).push([[6956],{2247:(e,t,a)=>{a.d(t,{xA:()=>d,yg:()=>m});var n=a(4041);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),g=u(a),p=r,m=g["".concat(o,".").concat(p)]||g[p]||c[p]||l;return a?n.createElement(m,s(s({ref:t},d),{},{components:a})):n.createElement(m,s({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=p;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[g]="string"==typeof e?e:r,s[1]=i;for(var u=2;u<l;u++)s[u]=a[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5211:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var n=a(9575),r=(a(4041),a(2247));const l={sidebar_position:2},s="Unit",i={unversionedId:"modules/mes/unit",id:"modules/mes/unit",title:"Unit",description:"The Unit object represents a unit in the MES service. It defines various methods for interacting with unit properties, results, and captures.",source:"@site/docs/modules/6-mes/2-unit.md",sourceDirName:"modules/6-mes",slug:"/modules/mes/unit",permalink:"/onevision/docs/modules/mes/unit",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"modules",previous:{title:"Mes",permalink:"/onevision/docs/modules/mes/mes"},next:{title:"Capture",permalink:"/onevision/docs/modules/mes/capture"}},o={},u=[{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>setSerial()</code>",id:"setserial",level:3},{value:"<code>getSerial()</code>",id:"getserial",level:3},{value:"<code>setModel()</code>",id:"setmodel",level:3},{value:"<code>getModel()</code>",id:"getmodel",level:3},{value:"<code>setBatch()</code>",id:"setbatch",level:3},{value:"<code>getBatch()</code>",id:"getbatch",level:3},{value:"<code>getProject()</code>",id:"getproject",level:3},{value:"<code>setUserId()</code>",id:"setuserid",level:3},{value:"<code>getUserId()</code>",id:"getuserid",level:3},{value:"<code>getCreationDate()</code>",id:"getcreationdate",level:3},{value:"<code>getModificationDate()</code>",id:"getmodificationdate",level:3},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>Unit.createAutoSerial()</code>",id:"unitcreateautoserial",level:3},{value:"Result Methods",id:"result-methods",level:2},{value:"<code>addResult()</code>",id:"addresult",level:3},{value:"<code>getResult()</code>",id:"getresult",level:3},{value:"<code>hasResult()</code>",id:"hasresult",level:3},{value:"<code>removeResult()</code>",id:"removeresult",level:3},{value:"<code>listResults()</code>",id:"listresults",level:3},{value:"Capture Methods",id:"capture-methods",level:2},{value:"<code>addCapture()</code>",id:"addcapture",level:3},{value:"<code>getCapture()</code>",id:"getcapture",level:3},{value:"<code>hasCapture()</code>",id:"hascapture",level:3},{value:"<code>removeCapture()</code>",id:"removecapture",level:3},{value:"<code>listCaptures()</code>",id:"listcaptures",level:3}],d={toc:u},g="wrapper";function c(e){let{components:t,...a}=e;return(0,r.yg)(g,(0,n.A)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"unit"},"Unit"),(0,r.yg)("p",null,"The ",(0,r.yg)("strong",{parentName:"p"},"Unit")," object represents a unit in the MES service. It defines various methods for interacting with unit properties, results, and captures."),(0,r.yg)("h2",{id:"constructors"},"Constructors"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"new Unit(): Unit;\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"new Unit(serial: string): Unit;\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"new Unit(capture: Capture): Unit;\n")),(0,r.yg)("h2",{id:"methods"},"Methods"),(0,r.yg)("h3",{id:"setserial"},(0,r.yg)("inlineCode",{parentName:"h3"},"setSerial()")),(0,r.yg)("p",null,"Sets the serial number of the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"setSerial(serial: string): void;\n")),(0,r.yg)("h3",{id:"getserial"},(0,r.yg)("inlineCode",{parentName:"h3"},"getSerial()")),(0,r.yg)("p",null,"Gets the serial number of the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"getSerial(): string;\n")),(0,r.yg)("h3",{id:"setmodel"},(0,r.yg)("inlineCode",{parentName:"h3"},"setModel()")),(0,r.yg)("p",null,"Sets the model of the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"setModel(model: string): void;\n")),(0,r.yg)("h3",{id:"getmodel"},(0,r.yg)("inlineCode",{parentName:"h3"},"getModel()")),(0,r.yg)("p",null,"Gets the model of the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"getModel(): string;\n\n")),(0,r.yg)("h3",{id:"setbatch"},(0,r.yg)("inlineCode",{parentName:"h3"},"setBatch()")),(0,r.yg)("p",null,"Sets the batch of the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"setBatch(batch: string): void;\n")),(0,r.yg)("h3",{id:"getbatch"},(0,r.yg)("inlineCode",{parentName:"h3"},"getBatch()")),(0,r.yg)("p",null,"Gets the batch of the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"getBatch(): string;\n")),(0,r.yg)("h3",{id:"getproject"},(0,r.yg)("inlineCode",{parentName:"h3"},"getProject()")),(0,r.yg)("p",null,"Gets the project of the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"getProject(): string;\n")),(0,r.yg)("h3",{id:"setuserid"},(0,r.yg)("inlineCode",{parentName:"h3"},"setUserId()")),(0,r.yg)("p",null,"Sets the user ID of the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"setUserId(userId: string): void;\n")),(0,r.yg)("h3",{id:"getuserid"},(0,r.yg)("inlineCode",{parentName:"h3"},"getUserId()")),(0,r.yg)("p",null,"Gets the user ID of the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"getUserId(): string;\n")),(0,r.yg)("h3",{id:"getcreationdate"},(0,r.yg)("inlineCode",{parentName:"h3"},"getCreationDate()")),(0,r.yg)("p",null,"Gets the creation date of the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"getCreationDate(): number;\n")),(0,r.yg)("h3",{id:"getmodificationdate"},(0,r.yg)("inlineCode",{parentName:"h3"},"getModificationDate()")),(0,r.yg)("p",null,"Gets the last modification date of the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"getModificationDate(): number;\n")),(0,r.yg)("h2",{id:"static-methods"},"Static Methods"),(0,r.yg)("h3",{id:"unitcreateautoserial"},(0,r.yg)("inlineCode",{parentName:"h3"},"Unit.createAutoSerial()")),(0,r.yg)("p",null,"Creates a new serial number for a unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"Unit.createAutoSerial(): string;\n")),(0,r.yg)("h2",{id:"result-methods"},"Result Methods"),(0,r.yg)("h3",{id:"addresult"},(0,r.yg)("inlineCode",{parentName:"h3"},"addResult()")),(0,r.yg)("p",null,"Adds a result to the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"addResult(resultName: string, value: any): void;\n")),(0,r.yg)("h3",{id:"getresult"},(0,r.yg)("inlineCode",{parentName:"h3"},"getResult()")),(0,r.yg)("p",null,"Gets the value of a result from the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"getResult(resultName: string): any;\n")),(0,r.yg)("h3",{id:"hasresult"},(0,r.yg)("inlineCode",{parentName:"h3"},"hasResult()")),(0,r.yg)("p",null,"Checks if the unit has a specific result."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"hasResult(resultName: string): boolean;\n")),(0,r.yg)("h3",{id:"removeresult"},(0,r.yg)("inlineCode",{parentName:"h3"},"removeResult()")),(0,r.yg)("p",null,"Removes a result from the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"removeResult(resultName: string): void;\n")),(0,r.yg)("h3",{id:"listresults"},(0,r.yg)("inlineCode",{parentName:"h3"},"listResults()")),(0,r.yg)("p",null,"Lists all results of the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"listResults(): string[];\n")),(0,r.yg)("h2",{id:"capture-methods"},"Capture Methods"),(0,r.yg)("p",null,"Each unit represents one or more ",(0,r.yg)("a",{parentName:"p",href:"./capture"},"Captures"),". With these methods, you can manage and manipulate unit captures effectively."),(0,r.yg)("h3",{id:"addcapture"},(0,r.yg)("inlineCode",{parentName:"h3"},"addCapture()")),(0,r.yg)("p",null,"Adds a capture to the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"addCapture(capture: Capture): void;\n")),(0,r.yg)("h3",{id:"getcapture"},(0,r.yg)("inlineCode",{parentName:"h3"},"getCapture()")),(0,r.yg)("p",null,"Gets a capture from the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"getCapture(captureName: string): Capture;\n")),(0,r.yg)("h3",{id:"hascapture"},(0,r.yg)("inlineCode",{parentName:"h3"},"hasCapture()")),(0,r.yg)("p",null,"Checks if the unit has a specific capture."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"hasCapture(captureName: string): boolean;\n")),(0,r.yg)("h3",{id:"removecapture"},(0,r.yg)("inlineCode",{parentName:"h3"},"removeCapture()")),(0,r.yg)("p",null,"Removes a capture from the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"removeCapture(captureName: string): void;\n")),(0,r.yg)("h3",{id:"listcaptures"},(0,r.yg)("inlineCode",{parentName:"h3"},"listCaptures()")),(0,r.yg)("p",null,"Lists all captures of the unit."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"listCaptures(): string[];\n")))}c.isMDXComponent=!0}}]);