"use strict";(self.webpackChunk_indeepvision_onevision_docs=self.webpackChunk_indeepvision_onevision_docs||[]).push([[5785],{2247:(e,n,i)=>{i.d(n,{xA:()=>c,yg:()=>y});var t=i(4041);function a(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function o(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){a(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function s(e,n){if(null==e)return{};var i,t,a=function(e,n){if(null==e)return{};var i,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||(a[i]=e[i]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var l=t.createContext({}),p=function(e){var n=t.useContext(l),i=n;return e&&(i="function"==typeof e?e(n):o(o({},n),e)),i},c=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var i=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(i),g=a,y=m["".concat(l,".").concat(g)]||m[g]||u[g]||r;return i?t.createElement(y,o(o({ref:n},c),{},{components:i})):t.createElement(y,o({ref:n},c))}));function y(e,n){var i=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=i.length,o=new Array(r);o[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<r;p++)o[p]=i[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,i)}g.displayName="MDXCreateElement"},7618:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var t=i(9575),a=(i(4041),i(2247));const r={sidebar_position:0},o="Features",s={unversionedId:"programming/syntax/features",id:"programming/syntax/features",title:"Features",description:"This section of the documentation is the programming reference of OneVision Scripts, the scripting language used in OneVision.",source:"@site/docs/programming/syntax/features.md",sourceDirName:"programming/syntax",slug:"/programming/syntax/features",permalink:"/onevision/docs/programming/syntax/features",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"programming",next:{title:"Language Rules",permalink:"/onevision/docs/programming/syntax/language-rules"}},l={},p=[{value:"Key Features and Syntax",id:"key-features-and-syntax",level:3}],c={toc:p},m="wrapper";function u(e){let{components:n,...i}=e;return(0,a.yg)(m,(0,t.A)({},c,i,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"features"},"Features"),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"This section of the documentation is the programming reference of ",(0,a.yg)("strong",{parentName:"p"},"OneVision Scripts"),", the scripting language used in OneVision."),(0,a.yg)("p",{parentName:"admonition"},"For information about the ",(0,a.yg)("strong",{parentName:"p"},"Editor")," section of the User Interface, refer to ",(0,a.yg)("a",{parentName:"p",href:"/onevision/docs/software-guide/editor/add-script"},"Editor")," section.")),(0,a.yg)("p",null,"OneVision Scripts is a specialized programming language designed for use within the computer vision software environment OneVision. While it shares many syntactic and functional similarities with TypeScript, it includes specific features tailored to enhance interaction with computer vision applications and optimize computer vision-related tasks."),(0,a.yg)("h3",{id:"key-features-and-syntax"},"Key Features and Syntax"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"TypeScript-Like Syntax")),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"Variables and Types:")," OneVision Scripts uses the same basic syntax for declaring variables and types as TypeScript."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"Functions:")," Function declarations and usage follow TypeScript conventions."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"Basic Control Structures:")," Familiar control structures such as loops and conditionals are available and follow TypeScript syntax."))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Simplified Functionality")),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"No Class Support:")," To maintain simplicity and focus on computer vision tasks, OneVision Scripts does not support the creation of classes. Instead, it emphasizes functional programming and the use of built-in types, methods and classes. You can create objects from built-in classes, but you cannot define new classes."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"No Async/Await:")," Unlike TypeScript, OneVision Scripts does not support the use of async and await for handling asynchronous operations, streamlining the scripting process for synchronous execution and simplicity."))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Enhanced Computer Vision Capabilities")),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"VisionElements Module:")," The core of OneVision Scripts' computer vision capabilities is the VisionElements module. This module contains all the necessary functionality to implement computer vision applications, including:",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"Image Handling:")," Methods for loading, processing, and analyzing images."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"Vision-Specific Data Types:")," Data types specific to computer vision, such as Image, Rectangles, Contours..."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"Algorithm Access:")," Functions to access common computer vision algorithms like edge detection and feature matching."))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"Visualization Module:")," This module provides helpers to create visuals for computer vision applications, particularly useful in the industrial sector."))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Optimized Performance for Vision Tasks")),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"Parallel Processing:")," Built-in support for parallel processing to handle large-scale image data efficiently. This can be achieved using:",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"Different Sequences:")," Perform operations simultaneously using different sequences."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"Function Blocks:")," Define pieces of code as function blocks and run them asynchronously, allowing for concurrent execution of multiple operations.")))))),(0,a.yg)("p",null,"OneVision Scripts provides a robust, TypeScript-like programming environment with additional capabilities tailored for computer vision applications. By leveraging the VisionElements and Visualization modules, developers can easily access specialized functions and data types, optimize performance for image processing tasks, and create compelling visuals for industrial applications. This combination of familiar syntax and powerful, domain-specific features, along with streamlined, synchronous scripting and advanced parallel processing capabilities, makes OneVision Scripts an effective language for developing advanced computer vision solutions."))}u.isMDXComponent=!0}}]);